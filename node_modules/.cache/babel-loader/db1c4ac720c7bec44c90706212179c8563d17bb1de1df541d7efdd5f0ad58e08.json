{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\cse134-hw5\\\\my-app\\\\src\\\\components\\\\Weather.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetch_URI = \"https://api.weather.gov/gridpoints/SGX/53,20/forecast/hourly\";\nconst Weather = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  useEffect(() => {\n    fetch(fetch_URI).then(res => res.json()).then(body => setWeatherData(body.properties.periods[0])).catch(() => null);\n  }, []);\n  if (weatherData == null) return null;\n  const {\n    temperature,\n    temperatureUnit,\n    isDaytime,\n    shortForecast,\n    windSpeed,\n    windDirection,\n    relativeHumidity,\n    probabilityOfPrecipitation,\n    icon\n  } = weatherData;\n  const colorTheme = isDaytime ? 'bright' : 'dark';\n  let timeEl = isDaytime ? 'It is Daytime' : 'It is Night time';\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"weather-widget\",\n    \"data-theme\": colorTheme,\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [temperature, \"\\xB0\", temperatureUnit]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: shortForecast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Wind speed: \", windSpeed, \" \", windDirection]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Humidity: \", relativeHumidity.value, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Chance of rain: \", probabilityOfPrecipitation.value, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: timeEl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), icon && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: icon.split(\",\")[0],\n      alt: \"Weather condition icon\",\n      style: {\n        width: '100px',\n        height: '100px',\n        borderRadius: '1rem'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Weather, \"BCUo9muHyxrqajg6diFxqqqjG/A=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","fetch_URI","Weather","_s","weatherData","setWeatherData","fetch","then","res","json","body","properties","periods","catch","temperature","temperatureUnit","isDaytime","shortForecast","windSpeed","windDirection","relativeHumidity","probabilityOfPrecipitation","icon","colorTheme","timeEl","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","src","split","alt","style","width","height","borderRadius","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/cse134-hw5/my-app/src/components/Weather.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nconst fetch_URI = \"https://api.weather.gov/gridpoints/SGX/53,20/forecast/hourly\";\r\n\r\nconst Weather = () => {\r\n  const [weatherData, setWeatherData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(fetch_URI)\r\n      .then((res) => res.json())\r\n      .then((body) => \r\n        setWeatherData(body.properties.periods[0])\r\n      )\r\n      .catch(() => null);\r\n  }, []);\r\n\r\n  if (weatherData == null) return null;\r\n\r\n  const {\r\n    temperature,\r\n    temperatureUnit,\r\n    isDaytime,\r\n    shortForecast,\r\n    windSpeed,\r\n    windDirection,\r\n    relativeHumidity,\r\n    probabilityOfPrecipitation,\r\n    icon\r\n  } = weatherData;\r\n\r\n  const colorTheme = isDaytime ? 'bright' : 'dark';\r\n  let timeEl = isDaytime ? 'It is Daytime' : 'It is Night time'; \r\n  return (\r\n    <section className='weather-widget' data-theme={ colorTheme }>\r\n      <ul>\r\n        <li>{ temperature }Â°{ temperatureUnit }</li>\r\n        <li>{ shortForecast }</li>\r\n        <li>Wind speed: { windSpeed } { windDirection }</li>\r\n        <li>Humidity: { relativeHumidity.value }%</li>\r\n        <li>Chance of rain: { probabilityOfPrecipitation.value }%</li>\r\n        <li>{ timeEl }</li>\r\n      </ul>\r\n      {icon && <img src={icon.split(\",\")[0]} alt=\"Weather condition icon\" style={{ width: '100px', height: '100px', borderRadius: '1rem' }} />}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Weather;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,SAAS,GAAG,8DAA8D;AAEhF,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACdS,KAAK,CAACL,SAAS,CAAC,CACbM,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IACTL,cAAc,CAACK,IAAI,CAACC,UAAU,CAACC,OAAO,CAAC,CAAC,CAAC,CAC3C,CAAC,CACAC,KAAK,CAAC,MAAM,IAAI,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIT,WAAW,IAAI,IAAI,EAAE,OAAO,IAAI;EAEpC,MAAM;IACJU,WAAW;IACXC,eAAe;IACfC,SAAS;IACTC,aAAa;IACbC,SAAS;IACTC,aAAa;IACbC,gBAAgB;IAChBC,0BAA0B;IAC1BC;EACF,CAAC,GAAGlB,WAAW;EAEf,MAAMmB,UAAU,GAAGP,SAAS,GAAG,QAAQ,GAAG,MAAM;EAChD,IAAIQ,MAAM,GAAGR,SAAS,GAAG,eAAe,GAAG,kBAAkB;EAC7D,oBACEhB,OAAA;IAASyB,SAAS,EAAC,gBAAgB;IAAC,cAAaF,UAAY;IAAAG,QAAA,gBAC3D1B,OAAA;MAAA0B,QAAA,gBACE1B,OAAA;QAAA0B,QAAA,GAAMZ,WAAW,EAAE,MAAC,EAAEC,eAAe;MAAA;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC5C9B,OAAA;QAAA0B,QAAA,EAAMT;MAAa;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC1B9B,OAAA;QAAA0B,QAAA,GAAI,cAAY,EAAER,SAAS,EAAE,GAAC,EAAEC,aAAa;MAAA;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACpD9B,OAAA;QAAA0B,QAAA,GAAI,YAAU,EAAEN,gBAAgB,CAACW,KAAK,EAAE,GAAC;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9C9B,OAAA;QAAA0B,QAAA,GAAI,kBAAgB,EAAEL,0BAA0B,CAACU,KAAK,EAAE,GAAC;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9D9B,OAAA;QAAA0B,QAAA,EAAMF;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC,EACJR,IAAI,iBAAItB,OAAA;MAAKgC,GAAG,EAAEV,IAAI,CAACW,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAE;MAACC,GAAG,EAAC,wBAAwB;MAACC,KAAK,EAAE;QAAEC,KAAK,EAAE,OAAO;QAAEC,MAAM,EAAE,OAAO;QAAEC,YAAY,EAAE;MAAO;IAAE;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjI,CAAC;AAEd,CAAC;AAAC3B,EAAA,CAzCID,OAAO;AAAAqC,EAAA,GAAPrC,OAAO;AA2Cb,eAAeA,OAAO;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}